import numpy as np

def monte_carlo_integration(f, a, b, n):
    """Обчислює значення інтеграла функції f методом Монте-Карло.
    
    Args:
        f: функція, яка інтегрується.
        a: нижня межа інтегрування.
        b: верхня межа інтегрування.
        n: кількість випадкових точок.
        
    Returns:
        Значення інтеграла.
    """
    # Генеруємо n випадкових точок у проміжку [a, b]
    x = np.random.uniform(a, b, n)
    
    # Обчислюємо значення функції у випадкових точках
    fx = f(x)
    
    # Обчислюємо середнє значення функції та множимо на ширину інтервалу
    integral = np.mean(fx) * (b - a)
    
    return integral

# Визначимо функцію, яку потрібно інтегрувати
def f(x):
    return x**2

# Визначимо межі інтегрування
a = 0
b = 2

# Обчислимо значення інтеграла методом Монте-Карло з 100000 випадковими точками
monte_carlo_result = monte_carlo_integration(f, a, b, 100000)
print("Значення інтеграла методом Монте-Карло:", monte_carlo_result)


import scipy.integrate as spi

# Обчислення інтеграла за допомогою функції quad
quad_result, _ = spi.quad(f, a, b)
print("Значення інтеграла методом quad:", quad_result)
